package internal

import (
	"fmt"

	"github.com/antlr4-go/antlr/v4"
)

// ReasonErrorListener is an object used by the autogenerated atlr parsers that provides
// different error handling callbacks for different types of events encountered during parsing
//
// HadSynError bool: specifying whether or not the SyntaxError callback was invoked
// SynError error: error, if any, that was invoked during SyntaxError callback
type ReasonLangErrorListener struct {
	*antlr.DefaultErrorListener

	HadSynError bool
	SynError    error
}

// NewRawrErrorListener returns a new RawrErrorListener object
func NewReasonLangErrorListener() *ReasonLangErrorListener {
	l := &ReasonLangErrorListener{
		HadSynError: false,
		SynError:    nil,
	}
	return l
}

// SyntaxError is a callback for the auto-generated parser that handles syntax errors
func (l *ReasonLangErrorListener) SyntaxError(recognizer antlr.Recognizer, offendingSymbol interface{}, line, column int, msg string, e antlr.RecognitionException) {
	l.HadSynError = true
	l.SynError = fmt.Errorf("syntax error on line %d:%d %s", line, column, msg)
}
