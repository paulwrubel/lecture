// Code generated from Lecture.g4 by ANTLR 4.13.1. DO NOT EDIT.

package lecture

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type LectureLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var LectureLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func lecturelexerLexerInit() {
	staticData := &LectureLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'okay, hear me out'", "'i rest my case'", "'now let's say'", "'let's say'",
		"'then we have'", "'we can use a process known as'", "'which needs'",
		"'to produce a'", "'it proceeds as follows'", "'finally, we get'", "'the result of'",
		"'here's what we need to do'", "'now that we've done that'", "'we can move on'",
		"'a'", "'called'", "'is'", "'and'", "'using'", "'if'", "'otherwise'",
		"'literally'", "'number'", "'plus'", "'minus'", "'quote'", "'unquote'",
		"','", "' '",
	}
	staticData.SymbolicNames = []string{
		"", "OKAY_HEAR_ME_OUT", "I_REST_MY_CASE", "NOW_LETS_SAY", "LETS_SAY",
		"THEN_WE_HAVE", "WE_CAN_USE_A_PROCESS_KNOWN_AS", "WHICH_NEEDS", "TO_PRODUCE_A",
		"IT_PROCEEDS_AS_FOLLOWS", "FINALLY_WE_GET", "THE_RESULT_OF", "HERES_WHAT_WE_NEED_TO_DO",
		"NOW_THAT_WEVE_DONE_THAT", "WE_CAN_MOVE_ON", "A", "CALLED", "IS", "AND",
		"USING", "IF", "OTHERWISE", "LITERALLY", "NUMBER", "PLUS", "MINUS",
		"QUOTE", "UNQUOTE", "COMMA", "SPACE", "TERMINATOR", "IDENTIFIER_STRING",
		"STRING", "INTEGER", "WS",
	}
	staticData.RuleNames = []string{
		"NON_QUOTE", "ESCAPED_QUOTE", "CHARACTER", "ALPHANUMERIC", "ALPHA",
		"BASICSYMBOL", "NONQUOTEORESCAPED", "DOT", "DIGIT", "OKAY_HEAR_ME_OUT",
		"I_REST_MY_CASE", "NOW_LETS_SAY", "LETS_SAY", "THEN_WE_HAVE", "WE_CAN_USE_A_PROCESS_KNOWN_AS",
		"WHICH_NEEDS", "TO_PRODUCE_A", "IT_PROCEEDS_AS_FOLLOWS", "FINALLY_WE_GET",
		"THE_RESULT_OF", "HERES_WHAT_WE_NEED_TO_DO", "NOW_THAT_WEVE_DONE_THAT",
		"WE_CAN_MOVE_ON", "A", "CALLED", "IS", "AND", "USING", "IF", "OTHERWISE",
		"LITERALLY", "NUMBER", "PLUS", "MINUS", "QUOTE", "UNQUOTE", "COMMA",
		"SPACE", "TERMINATOR", "IDENTIFIER_STRING", "STRING", "INTEGER", "WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 34, 467, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3,
		1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 3, 6, 103, 8, 6, 1, 7, 1, 7, 1, 8,
		1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9,
		1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1,
		10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10,
		1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1,
		11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12,
		1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1,
		13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14,
		1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1,
		14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14,
		1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1,
		15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16,
		1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1,
		17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17,
		1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1,
		18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18,
		1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1,
		19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20,
		1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1,
		20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20,
		1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1,
		21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21,
		1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1,
		22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22,
		1, 22, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1,
		25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27,
		1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1,
		29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30,
		1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1,
		31, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33,
		1, 33, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1,
		35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38,
		1, 39, 1, 39, 5, 39, 438, 8, 39, 10, 39, 12, 39, 441, 9, 39, 1, 40, 1,
		40, 1, 40, 1, 40, 5, 40, 447, 8, 40, 10, 40, 12, 40, 450, 9, 40, 1, 40,
		1, 40, 1, 40, 1, 40, 1, 41, 4, 41, 457, 8, 41, 11, 41, 12, 41, 458, 1,
		42, 4, 42, 462, 8, 42, 11, 42, 12, 42, 463, 1, 42, 1, 42, 0, 0, 43, 1,
		0, 3, 0, 5, 0, 7, 0, 9, 0, 11, 0, 13, 0, 15, 0, 17, 0, 19, 1, 21, 2, 23,
		3, 25, 4, 27, 5, 29, 6, 31, 7, 33, 8, 35, 9, 37, 10, 39, 11, 41, 12, 43,
		13, 45, 14, 47, 15, 49, 16, 51, 17, 53, 18, 55, 19, 57, 20, 59, 21, 61,
		22, 63, 23, 65, 24, 67, 25, 69, 26, 71, 27, 73, 28, 75, 29, 77, 30, 79,
		31, 81, 32, 83, 33, 85, 34, 1, 0, 6, 1, 0, 34, 34, 3, 0, 48, 57, 65, 90,
		97, 122, 2, 0, 65, 90, 97, 122, 3, 0, 45, 46, 64, 64, 95, 95, 1, 0, 48,
		57, 3, 0, 9, 10, 13, 13, 32, 32, 462, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0,
		0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0,
		0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1,
		0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45,
		1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0,
		53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0,
		0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0,
		0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0,
		0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1,
		0, 0, 0, 0, 85, 1, 0, 0, 0, 1, 87, 1, 0, 0, 0, 3, 89, 1, 0, 0, 0, 5, 92,
		1, 0, 0, 0, 7, 94, 1, 0, 0, 0, 9, 96, 1, 0, 0, 0, 11, 98, 1, 0, 0, 0, 13,
		102, 1, 0, 0, 0, 15, 104, 1, 0, 0, 0, 17, 106, 1, 0, 0, 0, 19, 108, 1,
		0, 0, 0, 21, 126, 1, 0, 0, 0, 23, 141, 1, 0, 0, 0, 25, 155, 1, 0, 0, 0,
		27, 165, 1, 0, 0, 0, 29, 178, 1, 0, 0, 0, 31, 208, 1, 0, 0, 0, 33, 220,
		1, 0, 0, 0, 35, 233, 1, 0, 0, 0, 37, 256, 1, 0, 0, 0, 39, 272, 1, 0, 0,
		0, 41, 286, 1, 0, 0, 0, 43, 312, 1, 0, 0, 0, 45, 337, 1, 0, 0, 0, 47, 352,
		1, 0, 0, 0, 49, 354, 1, 0, 0, 0, 51, 361, 1, 0, 0, 0, 53, 364, 1, 0, 0,
		0, 55, 368, 1, 0, 0, 0, 57, 374, 1, 0, 0, 0, 59, 377, 1, 0, 0, 0, 61, 387,
		1, 0, 0, 0, 63, 397, 1, 0, 0, 0, 65, 404, 1, 0, 0, 0, 67, 409, 1, 0, 0,
		0, 69, 415, 1, 0, 0, 0, 71, 421, 1, 0, 0, 0, 73, 429, 1, 0, 0, 0, 75, 431,
		1, 0, 0, 0, 77, 433, 1, 0, 0, 0, 79, 435, 1, 0, 0, 0, 81, 442, 1, 0, 0,
		0, 83, 456, 1, 0, 0, 0, 85, 461, 1, 0, 0, 0, 87, 88, 8, 0, 0, 0, 88, 2,
		1, 0, 0, 0, 89, 90, 5, 92, 0, 0, 90, 91, 5, 34, 0, 0, 91, 4, 1, 0, 0, 0,
		92, 93, 9, 0, 0, 0, 93, 6, 1, 0, 0, 0, 94, 95, 7, 1, 0, 0, 95, 8, 1, 0,
		0, 0, 96, 97, 7, 2, 0, 0, 97, 10, 1, 0, 0, 0, 98, 99, 7, 3, 0, 0, 99, 12,
		1, 0, 0, 0, 100, 103, 3, 1, 0, 0, 101, 103, 3, 3, 1, 0, 102, 100, 1, 0,
		0, 0, 102, 101, 1, 0, 0, 0, 103, 14, 1, 0, 0, 0, 104, 105, 5, 46, 0, 0,
		105, 16, 1, 0, 0, 0, 106, 107, 7, 4, 0, 0, 107, 18, 1, 0, 0, 0, 108, 109,
		5, 111, 0, 0, 109, 110, 5, 107, 0, 0, 110, 111, 5, 97, 0, 0, 111, 112,
		5, 121, 0, 0, 112, 113, 5, 44, 0, 0, 113, 114, 5, 32, 0, 0, 114, 115, 5,
		104, 0, 0, 115, 116, 5, 101, 0, 0, 116, 117, 5, 97, 0, 0, 117, 118, 5,
		114, 0, 0, 118, 119, 5, 32, 0, 0, 119, 120, 5, 109, 0, 0, 120, 121, 5,
		101, 0, 0, 121, 122, 5, 32, 0, 0, 122, 123, 5, 111, 0, 0, 123, 124, 5,
		117, 0, 0, 124, 125, 5, 116, 0, 0, 125, 20, 1, 0, 0, 0, 126, 127, 5, 105,
		0, 0, 127, 128, 5, 32, 0, 0, 128, 129, 5, 114, 0, 0, 129, 130, 5, 101,
		0, 0, 130, 131, 5, 115, 0, 0, 131, 132, 5, 116, 0, 0, 132, 133, 5, 32,
		0, 0, 133, 134, 5, 109, 0, 0, 134, 135, 5, 121, 0, 0, 135, 136, 5, 32,
		0, 0, 136, 137, 5, 99, 0, 0, 137, 138, 5, 97, 0, 0, 138, 139, 5, 115, 0,
		0, 139, 140, 5, 101, 0, 0, 140, 22, 1, 0, 0, 0, 141, 142, 5, 110, 0, 0,
		142, 143, 5, 111, 0, 0, 143, 144, 5, 119, 0, 0, 144, 145, 5, 32, 0, 0,
		145, 146, 5, 108, 0, 0, 146, 147, 5, 101, 0, 0, 147, 148, 5, 116, 0, 0,
		148, 149, 5, 39, 0, 0, 149, 150, 5, 115, 0, 0, 150, 151, 5, 32, 0, 0, 151,
		152, 5, 115, 0, 0, 152, 153, 5, 97, 0, 0, 153, 154, 5, 121, 0, 0, 154,
		24, 1, 0, 0, 0, 155, 156, 5, 108, 0, 0, 156, 157, 5, 101, 0, 0, 157, 158,
		5, 116, 0, 0, 158, 159, 5, 39, 0, 0, 159, 160, 5, 115, 0, 0, 160, 161,
		5, 32, 0, 0, 161, 162, 5, 115, 0, 0, 162, 163, 5, 97, 0, 0, 163, 164, 5,
		121, 0, 0, 164, 26, 1, 0, 0, 0, 165, 166, 5, 116, 0, 0, 166, 167, 5, 104,
		0, 0, 167, 168, 5, 101, 0, 0, 168, 169, 5, 110, 0, 0, 169, 170, 5, 32,
		0, 0, 170, 171, 5, 119, 0, 0, 171, 172, 5, 101, 0, 0, 172, 173, 5, 32,
		0, 0, 173, 174, 5, 104, 0, 0, 174, 175, 5, 97, 0, 0, 175, 176, 5, 118,
		0, 0, 176, 177, 5, 101, 0, 0, 177, 28, 1, 0, 0, 0, 178, 179, 5, 119, 0,
		0, 179, 180, 5, 101, 0, 0, 180, 181, 5, 32, 0, 0, 181, 182, 5, 99, 0, 0,
		182, 183, 5, 97, 0, 0, 183, 184, 5, 110, 0, 0, 184, 185, 5, 32, 0, 0, 185,
		186, 5, 117, 0, 0, 186, 187, 5, 115, 0, 0, 187, 188, 5, 101, 0, 0, 188,
		189, 5, 32, 0, 0, 189, 190, 5, 97, 0, 0, 190, 191, 5, 32, 0, 0, 191, 192,
		5, 112, 0, 0, 192, 193, 5, 114, 0, 0, 193, 194, 5, 111, 0, 0, 194, 195,
		5, 99, 0, 0, 195, 196, 5, 101, 0, 0, 196, 197, 5, 115, 0, 0, 197, 198,
		5, 115, 0, 0, 198, 199, 5, 32, 0, 0, 199, 200, 5, 107, 0, 0, 200, 201,
		5, 110, 0, 0, 201, 202, 5, 111, 0, 0, 202, 203, 5, 119, 0, 0, 203, 204,
		5, 110, 0, 0, 204, 205, 5, 32, 0, 0, 205, 206, 5, 97, 0, 0, 206, 207, 5,
		115, 0, 0, 207, 30, 1, 0, 0, 0, 208, 209, 5, 119, 0, 0, 209, 210, 5, 104,
		0, 0, 210, 211, 5, 105, 0, 0, 211, 212, 5, 99, 0, 0, 212, 213, 5, 104,
		0, 0, 213, 214, 5, 32, 0, 0, 214, 215, 5, 110, 0, 0, 215, 216, 5, 101,
		0, 0, 216, 217, 5, 101, 0, 0, 217, 218, 5, 100, 0, 0, 218, 219, 5, 115,
		0, 0, 219, 32, 1, 0, 0, 0, 220, 221, 5, 116, 0, 0, 221, 222, 5, 111, 0,
		0, 222, 223, 5, 32, 0, 0, 223, 224, 5, 112, 0, 0, 224, 225, 5, 114, 0,
		0, 225, 226, 5, 111, 0, 0, 226, 227, 5, 100, 0, 0, 227, 228, 5, 117, 0,
		0, 228, 229, 5, 99, 0, 0, 229, 230, 5, 101, 0, 0, 230, 231, 5, 32, 0, 0,
		231, 232, 5, 97, 0, 0, 232, 34, 1, 0, 0, 0, 233, 234, 5, 105, 0, 0, 234,
		235, 5, 116, 0, 0, 235, 236, 5, 32, 0, 0, 236, 237, 5, 112, 0, 0, 237,
		238, 5, 114, 0, 0, 238, 239, 5, 111, 0, 0, 239, 240, 5, 99, 0, 0, 240,
		241, 5, 101, 0, 0, 241, 242, 5, 101, 0, 0, 242, 243, 5, 100, 0, 0, 243,
		244, 5, 115, 0, 0, 244, 245, 5, 32, 0, 0, 245, 246, 5, 97, 0, 0, 246, 247,
		5, 115, 0, 0, 247, 248, 5, 32, 0, 0, 248, 249, 5, 102, 0, 0, 249, 250,
		5, 111, 0, 0, 250, 251, 5, 108, 0, 0, 251, 252, 5, 108, 0, 0, 252, 253,
		5, 111, 0, 0, 253, 254, 5, 119, 0, 0, 254, 255, 5, 115, 0, 0, 255, 36,
		1, 0, 0, 0, 256, 257, 5, 102, 0, 0, 257, 258, 5, 105, 0, 0, 258, 259, 5,
		110, 0, 0, 259, 260, 5, 97, 0, 0, 260, 261, 5, 108, 0, 0, 261, 262, 5,
		108, 0, 0, 262, 263, 5, 121, 0, 0, 263, 264, 5, 44, 0, 0, 264, 265, 5,
		32, 0, 0, 265, 266, 5, 119, 0, 0, 266, 267, 5, 101, 0, 0, 267, 268, 5,
		32, 0, 0, 268, 269, 5, 103, 0, 0, 269, 270, 5, 101, 0, 0, 270, 271, 5,
		116, 0, 0, 271, 38, 1, 0, 0, 0, 272, 273, 5, 116, 0, 0, 273, 274, 5, 104,
		0, 0, 274, 275, 5, 101, 0, 0, 275, 276, 5, 32, 0, 0, 276, 277, 5, 114,
		0, 0, 277, 278, 5, 101, 0, 0, 278, 279, 5, 115, 0, 0, 279, 280, 5, 117,
		0, 0, 280, 281, 5, 108, 0, 0, 281, 282, 5, 116, 0, 0, 282, 283, 5, 32,
		0, 0, 283, 284, 5, 111, 0, 0, 284, 285, 5, 102, 0, 0, 285, 40, 1, 0, 0,
		0, 286, 287, 5, 104, 0, 0, 287, 288, 5, 101, 0, 0, 288, 289, 5, 114, 0,
		0, 289, 290, 5, 101, 0, 0, 290, 291, 5, 39, 0, 0, 291, 292, 5, 115, 0,
		0, 292, 293, 5, 32, 0, 0, 293, 294, 5, 119, 0, 0, 294, 295, 5, 104, 0,
		0, 295, 296, 5, 97, 0, 0, 296, 297, 5, 116, 0, 0, 297, 298, 5, 32, 0, 0,
		298, 299, 5, 119, 0, 0, 299, 300, 5, 101, 0, 0, 300, 301, 5, 32, 0, 0,
		301, 302, 5, 110, 0, 0, 302, 303, 5, 101, 0, 0, 303, 304, 5, 101, 0, 0,
		304, 305, 5, 100, 0, 0, 305, 306, 5, 32, 0, 0, 306, 307, 5, 116, 0, 0,
		307, 308, 5, 111, 0, 0, 308, 309, 5, 32, 0, 0, 309, 310, 5, 100, 0, 0,
		310, 311, 5, 111, 0, 0, 311, 42, 1, 0, 0, 0, 312, 313, 5, 110, 0, 0, 313,
		314, 5, 111, 0, 0, 314, 315, 5, 119, 0, 0, 315, 316, 5, 32, 0, 0, 316,
		317, 5, 116, 0, 0, 317, 318, 5, 104, 0, 0, 318, 319, 5, 97, 0, 0, 319,
		320, 5, 116, 0, 0, 320, 321, 5, 32, 0, 0, 321, 322, 5, 119, 0, 0, 322,
		323, 5, 101, 0, 0, 323, 324, 5, 39, 0, 0, 324, 325, 5, 118, 0, 0, 325,
		326, 5, 101, 0, 0, 326, 327, 5, 32, 0, 0, 327, 328, 5, 100, 0, 0, 328,
		329, 5, 111, 0, 0, 329, 330, 5, 110, 0, 0, 330, 331, 5, 101, 0, 0, 331,
		332, 5, 32, 0, 0, 332, 333, 5, 116, 0, 0, 333, 334, 5, 104, 0, 0, 334,
		335, 5, 97, 0, 0, 335, 336, 5, 116, 0, 0, 336, 44, 1, 0, 0, 0, 337, 338,
		5, 119, 0, 0, 338, 339, 5, 101, 0, 0, 339, 340, 5, 32, 0, 0, 340, 341,
		5, 99, 0, 0, 341, 342, 5, 97, 0, 0, 342, 343, 5, 110, 0, 0, 343, 344, 5,
		32, 0, 0, 344, 345, 5, 109, 0, 0, 345, 346, 5, 111, 0, 0, 346, 347, 5,
		118, 0, 0, 347, 348, 5, 101, 0, 0, 348, 349, 5, 32, 0, 0, 349, 350, 5,
		111, 0, 0, 350, 351, 5, 110, 0, 0, 351, 46, 1, 0, 0, 0, 352, 353, 5, 97,
		0, 0, 353, 48, 1, 0, 0, 0, 354, 355, 5, 99, 0, 0, 355, 356, 5, 97, 0, 0,
		356, 357, 5, 108, 0, 0, 357, 358, 5, 108, 0, 0, 358, 359, 5, 101, 0, 0,
		359, 360, 5, 100, 0, 0, 360, 50, 1, 0, 0, 0, 361, 362, 5, 105, 0, 0, 362,
		363, 5, 115, 0, 0, 363, 52, 1, 0, 0, 0, 364, 365, 5, 97, 0, 0, 365, 366,
		5, 110, 0, 0, 366, 367, 5, 100, 0, 0, 367, 54, 1, 0, 0, 0, 368, 369, 5,
		117, 0, 0, 369, 370, 5, 115, 0, 0, 370, 371, 5, 105, 0, 0, 371, 372, 5,
		110, 0, 0, 372, 373, 5, 103, 0, 0, 373, 56, 1, 0, 0, 0, 374, 375, 5, 105,
		0, 0, 375, 376, 5, 102, 0, 0, 376, 58, 1, 0, 0, 0, 377, 378, 5, 111, 0,
		0, 378, 379, 5, 116, 0, 0, 379, 380, 5, 104, 0, 0, 380, 381, 5, 101, 0,
		0, 381, 382, 5, 114, 0, 0, 382, 383, 5, 119, 0, 0, 383, 384, 5, 105, 0,
		0, 384, 385, 5, 115, 0, 0, 385, 386, 5, 101, 0, 0, 386, 60, 1, 0, 0, 0,
		387, 388, 5, 108, 0, 0, 388, 389, 5, 105, 0, 0, 389, 390, 5, 116, 0, 0,
		390, 391, 5, 101, 0, 0, 391, 392, 5, 114, 0, 0, 392, 393, 5, 97, 0, 0,
		393, 394, 5, 108, 0, 0, 394, 395, 5, 108, 0, 0, 395, 396, 5, 121, 0, 0,
		396, 62, 1, 0, 0, 0, 397, 398, 5, 110, 0, 0, 398, 399, 5, 117, 0, 0, 399,
		400, 5, 109, 0, 0, 400, 401, 5, 98, 0, 0, 401, 402, 5, 101, 0, 0, 402,
		403, 5, 114, 0, 0, 403, 64, 1, 0, 0, 0, 404, 405, 5, 112, 0, 0, 405, 406,
		5, 108, 0, 0, 406, 407, 5, 117, 0, 0, 407, 408, 5, 115, 0, 0, 408, 66,
		1, 0, 0, 0, 409, 410, 5, 109, 0, 0, 410, 411, 5, 105, 0, 0, 411, 412, 5,
		110, 0, 0, 412, 413, 5, 117, 0, 0, 413, 414, 5, 115, 0, 0, 414, 68, 1,
		0, 0, 0, 415, 416, 5, 113, 0, 0, 416, 417, 5, 117, 0, 0, 417, 418, 5, 111,
		0, 0, 418, 419, 5, 116, 0, 0, 419, 420, 5, 101, 0, 0, 420, 70, 1, 0, 0,
		0, 421, 422, 5, 117, 0, 0, 422, 423, 5, 110, 0, 0, 423, 424, 5, 113, 0,
		0, 424, 425, 5, 117, 0, 0, 425, 426, 5, 111, 0, 0, 426, 427, 5, 116, 0,
		0, 427, 428, 5, 101, 0, 0, 428, 72, 1, 0, 0, 0, 429, 430, 5, 44, 0, 0,
		430, 74, 1, 0, 0, 0, 431, 432, 5, 32, 0, 0, 432, 76, 1, 0, 0, 0, 433, 434,
		3, 15, 7, 0, 434, 78, 1, 0, 0, 0, 435, 439, 3, 9, 4, 0, 436, 438, 3, 7,
		3, 0, 437, 436, 1, 0, 0, 0, 438, 441, 1, 0, 0, 0, 439, 437, 1, 0, 0, 0,
		439, 440, 1, 0, 0, 0, 440, 80, 1, 0, 0, 0, 441, 439, 1, 0, 0, 0, 442, 443,
		3, 69, 34, 0, 443, 444, 3, 73, 36, 0, 444, 448, 3, 75, 37, 0, 445, 447,
		3, 5, 2, 0, 446, 445, 1, 0, 0, 0, 447, 450, 1, 0, 0, 0, 448, 446, 1, 0,
		0, 0, 448, 449, 1, 0, 0, 0, 449, 451, 1, 0, 0, 0, 450, 448, 1, 0, 0, 0,
		451, 452, 3, 73, 36, 0, 452, 453, 3, 75, 37, 0, 453, 454, 3, 71, 35, 0,
		454, 82, 1, 0, 0, 0, 455, 457, 3, 17, 8, 0, 456, 455, 1, 0, 0, 0, 457,
		458, 1, 0, 0, 0, 458, 456, 1, 0, 0, 0, 458, 459, 1, 0, 0, 0, 459, 84, 1,
		0, 0, 0, 460, 462, 7, 5, 0, 0, 461, 460, 1, 0, 0, 0, 462, 463, 1, 0, 0,
		0, 463, 461, 1, 0, 0, 0, 463, 464, 1, 0, 0, 0, 464, 465, 1, 0, 0, 0, 465,
		466, 6, 42, 0, 0, 466, 86, 1, 0, 0, 0, 6, 0, 102, 439, 448, 458, 463, 1,
		6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// LectureLexerInit initializes any static state used to implement LectureLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewLectureLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func LectureLexerInit() {
	staticData := &LectureLexerLexerStaticData
	staticData.once.Do(lecturelexerLexerInit)
}

// NewLectureLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewLectureLexer(input antlr.CharStream) *LectureLexer {
	LectureLexerInit()
	l := new(LectureLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &LectureLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "Lecture.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// LectureLexer tokens.
const (
	LectureLexerOKAY_HEAR_ME_OUT              = 1
	LectureLexerI_REST_MY_CASE                = 2
	LectureLexerNOW_LETS_SAY                  = 3
	LectureLexerLETS_SAY                      = 4
	LectureLexerTHEN_WE_HAVE                  = 5
	LectureLexerWE_CAN_USE_A_PROCESS_KNOWN_AS = 6
	LectureLexerWHICH_NEEDS                   = 7
	LectureLexerTO_PRODUCE_A                  = 8
	LectureLexerIT_PROCEEDS_AS_FOLLOWS        = 9
	LectureLexerFINALLY_WE_GET                = 10
	LectureLexerTHE_RESULT_OF                 = 11
	LectureLexerHERES_WHAT_WE_NEED_TO_DO      = 12
	LectureLexerNOW_THAT_WEVE_DONE_THAT       = 13
	LectureLexerWE_CAN_MOVE_ON                = 14
	LectureLexerA                             = 15
	LectureLexerCALLED                        = 16
	LectureLexerIS                            = 17
	LectureLexerAND                           = 18
	LectureLexerUSING                         = 19
	LectureLexerIF                            = 20
	LectureLexerOTHERWISE                     = 21
	LectureLexerLITERALLY                     = 22
	LectureLexerNUMBER                        = 23
	LectureLexerPLUS                          = 24
	LectureLexerMINUS                         = 25
	LectureLexerQUOTE                         = 26
	LectureLexerUNQUOTE                       = 27
	LectureLexerCOMMA                         = 28
	LectureLexerSPACE                         = 29
	LectureLexerTERMINATOR                    = 30
	LectureLexerIDENTIFIER_STRING             = 31
	LectureLexerSTRING                        = 32
	LectureLexerINTEGER                       = 33
	LectureLexerWS                            = 34
)
